## SSL
ssl_certificate /etc/letsencrypt/live/{{ DOMAIN }}/fullchain.pem;
ssl_certificate_key /etc/letsencrypt/live/{{ DOMAIN }}/privkey.pem;
ssl_session_timeout 1d;
ssl_session_cache shared:MozSSL:10m;  # about 40000 sessions
ssl_session_tickets off;

ssl_dhparam /etc/nginx/dhparam/dhparams.pem;

ssl_protocols TLSv1.2 TLSv1.3;
ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384:DHE-RSA-CHACHA20-POLY1305;
ssl_prefer_server_ciphers off;

add_header Strict-Transport-Security "max-age=63072000" always;

ssl_stapling on;
ssl_stapling_verify on;

ssl_trusted_certificate /etc/letsencrypt/live/{{ DOMAIN }}/chain.pem;

## HEADER
proxy_set_header Host $http_host;
proxy_set_header X-Real-IP $remote_addr;
proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
proxy_set_header X-Forwarded-Proto $scheme;

resolver 127.0.0.11;

server {
    listen 80;
    server_name _;
    return 301 https://$host$request_uri;
}

server {
    # listen 80;
    listen 443 ssl;
    server_name {{ DOMAIN }};

    location / {
        set $target litespeed;
        proxy_pass http://$target;
    }
}

server {
    # listen 80;
    listen 443 ssl;
    server_name lsdash.{{ DOMAIN }};

    location / {
        auth_basic "Restricted Content";
        auth_basic_user_file /etc/nginx/pass/.lsdash;

        set $target litespeed;
        proxy_pass http://$target:7080;
    }
}

server {
    # listen 80;
    listen 443 ssl;
    server_name pma.{{ DOMAIN }};

    location / {
        auth_basic "Restricted Content";
        auth_basic_user_file /etc/nginx/pass/.pma;

        set $target pma;
        proxy_pass http://$target;
    }
}
