## update
apt update
apt upgrade -y

## set hostname
hostnamectl set-hostname yourHostname
cat >> /etc/hosts << EOF
127.0.0.1   yourHostname
EOF

## set timezone
timedatectl
timedatectl set-timezone yourTimezone

## check dns
cat /etc/resolv.conf

## reboot
reboot now

## install pkgs
apt install vim sudo bash-completion unzip apache2-utils jq fail2ban
# install docker (see documentation)

## setup bash-completion
source /etc/profile.d/bash_completion.sh

## config history
echo 'export HISTTIMEFORMAT="%F %T "' >> /etc/profile

## add user
adduser yourUsername
usermod -aG sudo yourUsername
usermod -aG docker yourUsername
vim /etc/passwd # make nologin

## login with key pair
passwd root
mkdir -p /root/.ssh/
touch /root/.ssh/authorized_keys
cat >> /root/.ssh/authorized_keys << EOF
YOUT_PUBLIC_KEY
EOF

## config ssh
# make PermitRootLogin prohibit-password
vim /etc/ssh/sshd_config
systemctl restart sshd

## get ssl
apt install certbot python3-certbot-dns-cloudflare

cat >> /etc/letsencrypt/cloudflare.ini << EOF
dns_cloudflare_api_token = YOUT_API_TOKEN
EOF

certbot -d "yourDomain" -d "*.yourDomain" --dns-cloudflare --dns-cloudflare-credentials /etc/letsencrypt/cloudflare.ini --preferred-challenges dns certonly --dns-cloudflare-propagation-seconds 60
certbot renew --dry-run

## run services
git clone https://github.com/a-farahani/Docker-ON-WP.git; cd Docker-ON-WP/; git fetch origin initial; git checkout initial
cp .env.sample .env
vim .env
./install.sh yourDomain

## sshuttle
# sshuttle --dns -NHDr yourUsername@yourServerIP yourServerIP/32 --ssh-cmd="ssh -i /path/to/privatekey"

## fail2ban
cat >> /etc/fail2ban/filter.d/sshd-root-publickey.conf << EOF
[INCLUDES]
before = common.conf

[Definition]
failregex = ^%(__prefix_line)s.*(authentication failure|Failed password) for .* from <HOST>(?: port \d+)? ssh\d*$
            ^%(__prefix_line)s.*Invalid user .* from <HOST>(?: port \d+)? ssh\d*$
            ^%(__prefix_line)s.*Failed publickey for invalid user .* from <HOST>(?: port \d+)? ssh\d*$
            ^%(__prefix_line)s.*User .* from <HOST> not allowed because not listed in AllowUsers$
            ^%(__prefix_line)s.*Did not receive identification string from <HOST>$
            ^%(__prefix_line)s.*Connection closed by authenticating user .* <HOST> port \d+ \[preauth\]$
            ^%(__prefix_line)s.*Received disconnect from <HOST> port \d+: \d+: Too many authentication failures \[preauth\]$

ignoreregex = ^%(__prefix_line)s.*Accepted publickey for root from <HOST> port \d+ ssh\d*$

EOF

# edit /etc/fail2ban/jail.local 

#
# SSH servers
#

[sshd]

# To use more aggressive sshd modes set filter parameter "mode" in jail.local:
# normal (default), ddos, extra or aggressive (combines all).
# See "tests/files/logs/sshd" or "filter.d/sshd.conf" for usage example and details.
#mode   = normal
port    = ssh
logpath = %(sshd_log)s
#backend = %(sshd_backend)s

# start my conf
enabled  = false
backend  = systemd
maxretry = 5
bantime  = 10m
findtime = 10m

[sshd-root-publickey]
enabled  = true
port     = ssh
filter   = sshd-root-publickey
#logpath  = /var/log/auth.log
backend  = systemd
logpath  = %(sshd_log)s
maxretry = 1
bantime  = 1h

# end my conf
